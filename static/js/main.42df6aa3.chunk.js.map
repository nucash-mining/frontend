{"version":3,"sources":["Components/logo512.png","Components/connectWalletPage.js","constants/chains.js","constants/coins.js","ethereumFunctions.js","network.js","NavBar/MenuItems.js","NavBar/logo512.png","NavBar/NavBar.js","TokenSwapper/TokenField.js","TokenSwapper/TokenButton.js","TokenSwapper/TokenDialog.js","Components/LoadingButton.js","Components/wrongNetwork.js","TokenSwapper/TokenSwapper.js","Liquidity/SwitchButton.js","Liquidity/LiquidityFunctions.js","Liquidity/LiquidityDeployer.js","Liquidity/RemoveLiquidity.js","Liquidity/Liquidity.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paperContainer","borderRadius","spacing","padding","paddingBottom","maxWidth","margin","marginTop","fullWidth","width","title","textAlign","marginBottom","hr","balance","overflow","buttonIcon","marginRight","footer","ConnectWalletPage","classes","className","src","companyLogo","alt","Container","Paper","Typography","variant","color","Grid","container","direction","justifyContent","alignItems","align","href","networks","ChainId","MAINNET","BINANCE","POLYGON","FANTOM","GRAMS","EGEM","DOGE","KAVA","ALTCOINCHAIN","OCTASPACE","ETHO","DEVNET","multisendAddress","Map","set","ECHELON","routerAddress","COINS","chains","name","abbr","address","ROUTER","require","DeflatingERC20","ERC20","FACTORY","PAIR","getNetwork","provider","a","network","chainId","getRouter","signer","Contract","abi","getWeth","getFactory","getAccount","window","ethereum","request","method","accounts","getDecimals","token","decimals","then","result","catch","error","console","log","getBalanceAndSymbol","accountAddress","weth_address","coins","getBalance","balanceRaw","ethers","utils","formatEther","symbol","tokenDecimals","balanceOf","address1","address2","amount","routerContract","tokens","time","Math","floor","Date","now","deadline","BigNumber","from","token1","amountIn","parseUnits","callStatic","getAmountsOut","amountOut","approve","WETH","wethAddress","swapExactETHForTokens","value","swapExactTokensForETHSupportingFeeOnTransferTokens","swapExactTokensForTokensSupportingFeeOnTransferTokens","token1Decimals","token2","token2Decimals","String","values_out","amount_out","Number","fetchReserves","pair","coin1","coin2","coin1Decimals","coin2Decimals","getReserves","reservesRaw","token0","results","factory","getPair","pairAddress","liquidityTokens_BN","liquidityTokens","toPrecision","createTheme","palette","primary","main","contrastText","secondary","Web3Provider","props","useState","isConnected","setConnected","Object","create","useRef","account","chainID","router","weth","backgroundListener","setupConnection","providers","getSigner","includes","get","factory_address","createListener","setInterval","useEffect","current","clearInterval","listener","render","MenuItems","url","cName","NavBar","state","clicked","map","item","index","to","Component","minHeight","backgroundColor","COLORS","borderColor","borderWidth","borderStyle","container_input","marginLeft","container_blank","grid","height","fab","zIndex","input","typography","h5","inputBase","RemoveLiquidityField1","onClick","onChange","activeField","xs","Fab","size","InputBase","placeholder","disabled","root","RemoveLiquidityField2","TokenField","button","paddingTop","coinName","opacity","TokenButton","coinAbbr","ButtonBase","focusRipple","styles","dialogContainer","titleSection","titleText","alignSelf","paddingLeft","paddingRight","coinList","overflowY","coinContainer","DialogTitle","withStyles","children","onClose","other","disableTypography","alignContent","IconButton","aria-label","DialogActions","MuiDialogActions","TokenDialog","open","React","setAddress","setError","exit","Dialog","undefined","paper","TextField","e","target","helperText","coin","Button","autoFocus","err","doesTokenExist","wrapper","position","progress","green","top","left","LoadingButton","loading","valid","success","fail","type","CircularProgress","WrongNetwork","switchButton","TokenSwapper","enqueueSnackbar","useSnackbar","dialog1Open","setDialog1Open","dialog2Open","setDialog2Open","wrongNetworkOpen","setToken1","setToken2","reserves","setReserves","field1Value","setField1Value","field2Value","setField2Value","setLoading","switchFields","reverse","handleChange","field1","formatBalance","parseFloat","formatReserve","reserve","data","isNaN","getAmountOut","toFixed","coinTimeout","setTimeout","clearTimeout","fontSize","parsedInput1","parsedInput2","isButtonEnabled","swapTokens","message","autoHideDuration","SwitchButton","setDeploy","changeStyles","K","document","getElementById","style","ButtonGroup","id","text","amount1","amount2","amount1min","amount2min","amountIn1","amountIn2","amount1Min","amount2Min","addLiquidityETH","addLiquidity","liquidity_tokens","liquidity","Getliquidity","removeLiquidityETH","removeLiquidity","quote","reserve1","reserve2","quoteMintLiquidity","amountA","amountB","MINIMUM_LIQUIDITY","_reserveA","_reserveB","totalSupply","reserveA","reserveB","_totalSupply","valueA","valueB","sqrt","min","amountADesired","amountBDesired","amountBOptimal","amountAOptimal","feeTo","feeOn","kLast","_kLast","feeLiquidity","Aout","Bout","background","values","LiquidityDeployer","setLiquidityTokens","liquidityOut","setLiquidityOut","oldField1Value","oldField2Value","field2","NaN","quoteAddLiquidity","networksigner","LiquidityRemover","tokensOut","setTokensOut","parsedInput","quoteRemoveLiquidity","Liquidity","deploy","deploy_or_remove","App","maxSnack","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.42df6aa3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo512.f7a75728.png\";","import React from \"react\";\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport companyLogo from \"./logo512.png\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(1),\n    paddingBottom: theme.spacing(3),\n    maxWidth: 700,\n    margin: \"auto\",\n    marginTop: \"200px\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n  footer: {\n    marginTop: \"45px\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction ConnectWalletPage() {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className=\"Title\">\n        {\" \"}\n        <img src={companyLogo} alt=\"Swapin.co DEX\"></img>\n        <h1 className=\"navbar-logo\"> </h1>\n      </div>\n\n      <Container>\n        <Paper className={classes.paperContainer}>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            color=\"common.white\"\n          >\n            Please connect an Ethereum wallet to your browser to use the\n            application\n          </Typography>\n        </Paper>\n      </Container>\n\n      <Grid\n        container\n        className={classes.footer}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"flex-center\"\n      >\n        <p align=\"flex-center\">\n          <a href=\"https://altcoinchain.org/\">ALTCoinchain</a> -{\" \"}\n          <a href=\"http://www.partyexplorer.co/\">PartyChain</a> -{\" \"}\n          <a href=\"https://explorer.octa.space/\">OctaSpace</a> -{\" \"}\n          <a href=\"https://dogechain.dog/\">DOGEchain</a> -{\" \"}\n          <a href=\"https://explorer.ethoprotocol.com/\">ETHO</a> -{\" \"}\n          <a href=\"https://egem.io/\">EGEM</a> -{\" \"}\n          <a href=\"https://etherscan.io/\">ETH</a> -{\" \"}\n          <a href=\"https://polygonscan.com/\">POLYGON</a> -{\" \"}\n          <a href=\"https://bscscan.com/\">BSC</a> -{\" \"}\n          <a href=\"https://ftmscan.com/\">FTM</a> <br></br>\n          <br></br>\n          <a href=\"https://forms.gle/qFdcJTx13Qt13LHJA\">\n            add chain or tokens\n          </a>{\" \"}\n          - <a href=\"https://twitter.com/swapinco\">Twitter</a> -{\" \"}\n          <a href=\"https://discord.gg/g2v57ydbh5\">Discord</a> -{\" \"}\n          <a href=\"https://github.com/swapinco\">Docs</a>\n        </p>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ConnectWalletPage;\n","export const networks = [\n  1, 56, 137, 250, 1773, 1987, 2000, 2222, 2330, 800001, 1313114, 65110000,\n];\n\nexport const ChainId = {\n  MAINNET: 1,\n  BINANCE: 56,\n  POLYGON: 137,\n  FANTOM: 250,\n  //  KUCOIN: 321,\n  //  THETA: 361,\n  GRAMS: 1773,\n  EGEM: 1987,\n  DOGE: 2000,\n  KAVA: 2222,\n  ALTCOINCHAIN: 2330,\n  OCTASPACE: 800001,\n  ETHO: 1313114,\n  DEVNET: 65110000,\n};\n\nexport const multisendAddress = new Map();\nmultisendAddress.set(\n  ChainId.ALTCOINCHAIN,\n  \"0xCF110A9F7c705604190f9Dd6FDf0FC79D00D569B\"\n);\nmultisendAddress.set(\n  ChainId.FANTOM,\n  \"0x5a03b79b6F4cbb1eC8276a87b74a9304D05442C7\"\n);\nmultisendAddress.set(\n  ChainId.POLYGON,\n  \"0x662adc895573D4131F2c3C9c6D0E5CdD1a803E6C\"\n);\nmultisendAddress.set(\n  ChainId.DOGE,\n  \"0x5a03b79b6F4cbb1eC8276a87b74a9304D05442C7\"\n);\nmultisendAddress.set(\n  ChainId.BINANCE,\n  \"0x1fdFC039f0433f319E0d3A33e28dF2e8057d0da0\"\n);\nmultisendAddress.set(\n  ChainId.ECHELON,\n  \"0x286a231F619734Bc5cEc3ca600984d237818E7ca\"\n);\nmultisendAddress.set(\n  ChainId.ETHO,\n  \"0x5a03b79b6F4cbb1eC8276a87b74a9304D05442C7\"\n);\nmultisendAddress.set(\n  ChainId.EGEM,\n  \"0x5a03b79b6F4cbb1eC8276a87b74a9304D05442C7\"\n);\nmultisendAddress.set(\n  ChainId.GRAMS,\n  \"0xCF110A9F7c705604190f9Dd6FDf0FC79D00D569B\"\n);\nmultisendAddress.set(\n  ChainId.OCTASPACE,\n  \"0xCF110A9F7c705604190f9Dd6FDf0FC79D00D569B\"\n);\n\nexport const routerAddress = new Map();\nrouterAddress.set(\n  ChainId.ALTCOINCHAIN,\n  \"0xae168Ce47cebca9abbC5107a58df0532f1afa4d6\"\n);\nrouterAddress.set(\n  ChainId.MAINNET,\n  \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\"\n);\nrouterAddress.set(\n  ChainId.POLYGON,\n  \"0xa5e0829caced8ffdd4de3c43696c57f7d7a678ff\"\n);\nrouterAddress.set(\n  ChainId.BINANCE,\n  \"0x10ed43c718714eb63d5aa57b78b54704e256024e\"\n);\n//routerAddress.set(ChainId.ETHO, \"\");\n//routerAddress.set(ChainId.ECHELON, \"\");\nrouterAddress.set(ChainId.DOGE, \"0xae168Ce47cebca9abbC5107a58df0532f1afa4d6\");\n//routerAddress.set(ChainId.KAVA, \"\");\nrouterAddress.set(ChainId.EGEM, \"0xae168Ce47cebca9abbC5107a58df0532f1afa4d6\");\nrouterAddress.set(ChainId.ETHO, \"0xae168Ce47cebca9abbC5107a58df0532f1afa4d6\");\nrouterAddress.set(ChainId.FANTOM, \"0xae168Ce47cebca9abbC5107a58df0532f1afa4d6\");\nrouterAddress.set(ChainId.DEVNET, \"0x04e555283D37aE85F6eB311fe2578F3B3f3dFc52\");\nrouterAddress.set(ChainId.GRAMS, \"0xae168Ce47cebca9abbC5107a58df0532f1afa4d6\");\nrouterAddress.set(\n  ChainId.OCTASPACE,\n  \"0xae168Ce47cebca9abbC5107a58df0532f1afa4d6\"\n);\n","import * as chains from \"./chains\";\n\n// If you add coins for a new network, make sure Weth address (for the router you are using) is the first entry\n\nconst ALTCOINCHAINTokens = [\n  {\n    name: \"Altcoin\",\n    abbr: \"ALT\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"WATT\",\n    abbr: \"WATT\",\n    address: \"0x6645143e49B3a15d8F205658903a55E520444698\",\n  },\n  {\n    name: \"Altminers\",\n    abbr: \"MALT\",\n    address: \"0xaF5D066Eb3e4147325d3ed23F94bc925fbf3B9EF\",\n  },\n  {\n    name: \"0xSCAM token\",\n    abbr: \"SCAM\",\n    address: \"0x75b37574C2317CCBA905E2c628d949710627C20A\",\n  },\n];\nconst ETHOTokens = [\n  {\n    name: \"ETHO\",\n    abbr: \"ETHO\",\n    address: \"\", // Weth address is fetched from the router\n  },\n];\n\nconst GRAMSTokens = [\n  {\n    name: \"GRAMS\",\n    abbr: \"GRAMS\",\n    address: \"\", // Weth address is fetched from the router\n  },\n];\n\nconst OCTASPACETokens = [\n  {\n    name: \"OCTASPACE\",\n    abbr: \"OCTA\",\n    address: \"\", // Weth address is fetched from the router\n  },\n];\n\nconst DEVNETTokens = [\n  {\n    name: \"Altcoinchain\",\n    abbr: \"ALT\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Newton\",\n    abbr: \"NEW\",\n    address: \"0xBd770416a3345F91E4B34576cb804a576fa48EB1\",\n  },\n  {\n    name: \"Token A\",\n    abbr: \"TA\",\n    address: \"0xD5073808CbA7d24500aa8f659B339b87945958a6\",\n  },\n  {\n    name: \"Token B\",\n    abbr: \"TB\",\n    address: \"0x908B8e60d149529d757F4aEd9320F246724f2b99\",\n  },\n];\n\nconst MAINNETTokens = [\n  {\n    name: \"Ether-OFAC-Censored\",\n    abbr: \"ETH\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Dai\",\n    abbr: \"DAI\",\n    address: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\",\n  },\n  {\n    name: \"Tether USD\",\n    abbr: \"USDT\",\n    address: \"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n  },\n  {\n    name: \"Wrapped BTC\",\n    abbr: \"WBTC\",\n    address: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\",\n  },\n  {\n    name: \"renBTC\",\n    abbr: \"renBTC\",\n    address: \"0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D\",\n  },\n  {\n    name: \"GFY\",\n    abbr: \"GFY\",\n    address: \"0x4b40CcF6BE366219b0c4c17970D14760c7160739\",\n  },\n];\n\nconst POLYGONTokens = [\n  {\n    name: \"MATIC\",\n    abbr: \"MATIC\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Watt\",\n    abbr: \"WATT\",\n    address: \"0xe960d5076cd3169c343ee287a2c3380a222e5839\",\n  },\n  {\n    name: \"Wrapped Ethereum\",\n    abbr: \"WETH\",\n    address: \"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619\",\n  },\n  {\n    name: \"Dai\",\n    abbr: \"DAI\",\n    address: \"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063\",\n  },\n  {\n    name: \"Tether USD\",\n    abbr: \"USDT\",\n    address: \"0xc2132d05d31c914a87c6611c10748aeb04b58e8f\",\n  },\n  {\n    name: \"USD Token\",\n    abbr: \"USDC\",\n    address: \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\",\n  },\n  {\n    name: \"binance-usd\",\n    abbr: \"BUSD\",\n    address: \"0xdab529f40e671a1d4bf91361c21bf9f0c9712ab7\",\n  },\n  {\n    name: \"Watt\",\n    abbr: \"WATT\",\n    address: \"0xe960d5076cd3169c343ee287a2c3380a222e5839\",\n  },\n];\n\nconst BINANCETokens = [\n  {\n    name: \"Binance Token\",\n    abbr: \"BNB\",\n    address: \"\", // Weth address is fetched from the router\n  },\n  {\n    name: \"Wrapped Ethereum\",\n    abbr: \"ETH\",\n    address: \"0x2170ed0880ac9a755fd29b2688956bd959f933f8\",\n  },\n  {\n    name: \"Tether USD\",\n    abbr: \"USDT\",\n    address: \"\",\n  },\n  {\n    name: \"USD Token\",\n    abbr: \"USDC\",\n    address: \"0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d\",\n  },\n  {\n    name: \"binance-usd\",\n    abbr: \"BSC-USD\",\n    address: \"0x55d398326f99059ff775485246999027b3197955\",\n  },\n  {\n    name: \"Pancakeswap\",\n    abbr: \"CAKE\",\n    address: \"0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82\",\n  },\n  {\n    name: \"binance-busd\",\n    abbr: \"BUSD\",\n    address: \"0xe9e7cea3dedca5984780bafc599bd69add087d56\",\n  },\n  {\n    name: \"Flux\",\n    abbr: \"FLUX\",\n    address: \"0xaff9084f2374585879e8b434c399e29e80cce635\",\n  },\n  {\n    name: \"Homeless Tokens\",\n    abbr: \"HTHB\",\n    address: \"0x62eab2c299c991391e707b79fe4a2f59bbdad805\",\n  },\n];\nconst DOGETokens = [\n  {\n    name: \"DOGEcoin\",\n    abbr: \"DOGE\",\n    address: \"\", // Weth address is fetched from the router\n  },\n];\nconst KAVATokens = [\n  {\n    name: \"KAVA\",\n    abbr: \"KAVA\",\n    address: \"\", // Weth address is fetched from the router\n  },\n];\nconst FANTOMTokens = [\n  {\n    name: \"FANTOM\",\n    abbr: \"FTM\",\n    address: \"\", // Weth address is fetched from the router\n  },\n];\nconst EGEMTokens = [\n  {\n    name: \"EGEM\",\n    abbr: \"EGEM\",\n    address: \"\", // Weth address is fetched from the router\n  },\n];\nconst COINS = new Map();\nCOINS.set(chains.ChainId.MAINNET, MAINNETTokens);\nCOINS.set(chains.ChainId.POLYGON, POLYGONTokens);\nCOINS.set(chains.ChainId.DEVNET, DEVNETTokens);\nCOINS.set(chains.ChainId.ALTCOINCHAIN, ALTCOINCHAINTokens);\nCOINS.set(chains.ChainId.BINANCE, BINANCETokens);\nCOINS.set(chains.ChainId.DOGE, DOGETokens);\nCOINS.set(chains.ChainId.KAVA, KAVATokens);\nCOINS.set(chains.ChainId.FANTOM, FANTOMTokens);\nCOINS.set(chains.ChainId.ETHO, ETHOTokens);\nCOINS.set(chains.ChainId.EGEM, EGEMTokens);\nCOINS.set(chains.ChainId.GRAMS, GRAMSTokens);\nCOINS.set(chains.ChainId.OCTASPACE, OCTASPACETokens);\nexport default COINS;\n","import { Contract, ethers } from \"ethers\";\nimport * as chains from \"./constants/chains\";\nimport COINS from \"./constants/coins\";\n\nconst ROUTER = require(\"./build/UniswapV2Router02.json\");\nconst DeflatingERC20 = require(\"./build/DeflatingERC20.json\");\nconst ERC20 = require(\"./build/ERC20.json\");\nconst FACTORY = require(\"./build/IUniswapV2Factory.json\");\nconst PAIR = require(\"./build/IUniswapV2Pair.json\");\n\nexport function getProvider() {\n  return new ethers.providers.Web3Provider(window.ethereum);\n}\n\nexport function getSigner(provider) {\n  return provider.getSigner();\n}\n\nexport async function getNetwork(provider) {\n  const network = await provider.getNetwork();\n  return network.chainId;\n}\n\nexport function getRouter(address, signer) {\n  return new Contract(address, ROUTER.abi, signer);\n}\n\nexport async function checkNetwork(provider) {\n  const chainId = getNetwork(provider);\n  if (chains.networks.includes(chainId)) {\n    return true;\n  }\n  return false;\n}\n\nexport function getWeth(address, signer) {\n  return new Contract(address, ERC20.abi, signer);\n}\n\nexport function getFactory(address, signer) {\n  return new Contract(address, FACTORY.abi, signer);\n}\n\nexport async function getAccount() {\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\",\n  });\n\n  return accounts[0];\n}\n\n//This function checks if a ERC20 token exists for a given address\n//    `address` - The Ethereum address to be checked\n//    `signer` - The current signer\nexport function doesTokenExist(address, signer) {\n  try {\n    return new Contract(address, DeflatingERC20.abi, signer);\n  } catch (err) {\n    return false;\n  }\n}\n\nexport async function getDecimals(token) {\n  const decimals = await token\n    .decimals()\n    .then((result) => {\n      return result;\n    })\n    .catch((error) => {\n      console.log(\"No tokenDecimals function for this token, set to 0\");\n      return 0;\n    });\n  return decimals;\n}\n\n// This function returns an object with 2 fields: `balance` which container's the account's balance in the particular token,\n// and `symbol` which is the abbreviation of the token name. To work correctly it must be provided with 4 arguments:\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `address` - An Ethereum address of the token to check for (either a token or ALT)\n//    `provider` - The current provider\n//    `signer` - The current signer\nexport async function getBalanceAndSymbol(\n  accountAddress,\n  address,\n  provider,\n  signer,\n  weth_address,\n  coins\n) {\n  try {\n    if (address === weth_address) {\n      const balanceRaw = await provider.getBalance(accountAddress);\n\n      return {\n        balance: ethers.utils.formatEther(balanceRaw),\n        symbol: coins[0].abbr,\n      };\n    } else {\n      const token = new Contract(address, DeflatingERC20.abi, signer);\n      const tokenDecimals = await getDecimals(token);\n      const balanceRaw = await token.balanceOf(accountAddress);\n      const symbol = await token.symbol();\n\n      return {\n        balance: balanceRaw * 10 ** -tokenDecimals,\n        symbol: symbol,\n      };\n    }\n  } catch (error) {\n    console.log(\"The getBalanceAndSymbol function had an error!\");\n    console.log(error);\n    return false;\n  }\n}\n\n// This function swaps two particular tokens / ALT, it can handle switching from ALT to ERC20 token,\n// ERC20 token to ALT, and ERC20 token to ERC20 token.\n// No error handling is done, so any issues can be caught with the use of .catch()\n// To work correctly, there needs to be 7 arguments:\n//    `address1` - An Ethereum address of the token to trade from (either a token or ALT)\n//    `address2` - An Ethereum address of the token to trade to (either a token or ALT)\n//    `amount` - A float or similar number representing the value of address1's token to trade\n//    `routerContract` - The router contract to carry out this trade\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `signer` - The current signer\nexport async function swapTokens(\n  address1,\n  address2,\n  amount,\n  routerContract,\n  accountAddress,\n  signer\n) {\n  const tokens = [address1, address2];\n  const time = Math.floor(Date.now() / 1000) + 200000;\n  const deadline = ethers.BigNumber.from(time);\n\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const tokenDecimals = await getDecimals(token1);\n\n  const amountIn = ethers.utils.parseUnits(amount, tokenDecimals);\n  const amountOut = await routerContract.callStatic.getAmountsOut(\n    amountIn,\n    tokens\n  );\n\n  await token1.approve(routerContract.address, amountIn);\n  const wethAddress = await routerContract.WETH();\n\n  if (address1 === wethAddress) {\n    // Eth -> Token\n    await routerContract.swapExactETHForTokens(\n      amountOut[1],\n      tokens,\n      accountAddress,\n      deadline,\n      { value: amountIn }\n    );\n  } else if (address2 === wethAddress) {\n    // Token -> Eth\n    await routerContract.swapExactTokensForETHSupportingFeeOnTransferTokens(\n      amountIn,\n      amountOut[1],\n      tokens,\n      accountAddress,\n      deadline\n    );\n  } else {\n    await routerContract.swapExactTokensForTokensSupportingFeeOnTransferTokens(\n      amountIn,\n      amountOut[1],\n      tokens,\n      accountAddress,\n      deadline\n    );\n  }\n}\n\n//This function returns the conversion rate between two token addresses\n//    `address1` - An Ethereum address of the token to swaped from (either a token or ALT)\n//    `address2` - An Ethereum address of the token to swaped to (either a token or ALT)\n//    `amountIn` - Amount of the token at address 1 to be swaped from\n//    `routerContract` - The router contract to carry out this swap\nexport async function getAmountOut(\n  address1,\n  address2,\n  amountIn,\n  routerContract,\n  signer\n) {\n  try {\n    const token1 = new Contract(address1, DeflatingERC20.abi, signer);\n    const token1Decimals = await getDecimals(token1);\n\n    const token2 = new Contract(address2, ERC20.abi, signer);\n    const token2Decimals = await getDecimals(token2);\n\n    const values_out = await routerContract.getAmountsOut(\n      ethers.utils.parseUnits(String(amountIn), token1Decimals),\n      [address1, address2]\n    );\n    const amount_out = values_out[1] * 10 ** -token2Decimals;\n    console.log(\"amount out: \", amount_out);\n    return Number(amount_out);\n  } catch {\n    return false;\n  }\n}\n\n// This function calls the pair contract to fetch the reserves stored in a the liquidity pool between the token of address1 and the token\n// of address2. Some extra logic was needed to make sure that the results were returned in the correct order, as\n// `pair.getReserves()` would always return the reserves in the same order regardless of which order the addresses were.\n//    `address1` - An Ethereum address of the token to trade from (either a ERC20 token or ALT)\n//    `address2` - An Ethereum address of the token to trade to (either a ERC20 token or ALT)\n//    `pair` - The pair contract for the two tokens\nexport async function fetchReserves(address1, address2, pair, signer) {\n  try {\n    // Get decimals for each coin\n    const coin1 = new Contract(address1, ERC20.abi, signer);\n    const coin2 = new Contract(address2, ERC20.abi, signer);\n\n    const coin1Decimals = await getDecimals(coin1);\n    const coin2Decimals = await getDecimals(coin2);\n\n    // Get reserves\n    const reservesRaw = await pair.getReserves();\n\n    // Put the results in the right order\n    const results = [\n      (await pair.token0()) === address1 ? reservesRaw[0] : reservesRaw[1],\n      (await pair.token1()) === address2 ? reservesRaw[1] : reservesRaw[0],\n    ];\n\n    // Scale each to the right decimal place\n    return [\n      results[0] * 10 ** -coin1Decimals,\n      results[1] * 10 ** -coin2Decimals,\n    ];\n  } catch (err) {\n    console.log(\"error!\");\n    console.log(err);\n    return [0, 0];\n  }\n}\n\n// This function returns the reserves stored in a the liquidity pool between the token of address1 and the token\n// of address2, as well as the liquidity tokens owned by accountAddress for that pair.\n//    `address1` - An Ethereum address of the token to trade from (either a token or ALT)\n//    `address2` - An Ethereum address of the token to trade to (either a token or ALT)\n//    `factory` - The current factory\n//    `signer` - The current signer\nexport async function getReserves(\n  address1,\n  address2,\n  factory,\n  signer,\n  accountAddress\n) {\n  try {\n    const pairAddress = await factory.getPair(address1, address2);\n    const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n    if (pairAddress !== \"0x0000000000000000000000000000000000000000\") {\n      const reservesRaw = await fetchReserves(address1, address2, pair, signer);\n      const liquidityTokens_BN = await pair.balanceOf(accountAddress);\n      const liquidityTokens = Number(\n        ethers.utils.formatEther(liquidityTokens_BN)\n      );\n\n      return [\n        reservesRaw[0].toPrecision(6),\n        reservesRaw[1].toPrecision(6),\n        liquidityTokens,\n      ];\n    } else {\n      console.log(\"no reserves yet\");\n      return [0, 0, 0];\n    }\n  } catch (err) {\n    console.log(\"error!\");\n    console.log(err);\n    return [0, 0, 0];\n  }\n}\n","import { useEffect, useState, useRef } from \"react\";\nimport { Contract, ethers } from \"ethers\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { SnackbarProvider } from \"notistack\";\nimport ConnectWalletPage from \"./Components/connectWalletPage\";\nimport {\n  getAccount,\n  getFactory,\n  getRouter,\n  getNetwork,\n  getWeth,\n} from \"./ethereumFunctions\";\nimport COINS from \"./constants/coins\";\nimport * as chains from \"./constants/chains\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff0000\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nconst autoReconnectDelay = 5000;\n\nconst Web3Provider = (props) => {\n  const [isConnected, setConnected] = useState(true);\n  let network = Object.create({});\n  network.provider = useRef(null);\n  network.signer = useRef(null);\n  network.account = useRef(null);\n  network.coins = [];\n  network.chainID = useRef(null);\n  network.router = useRef(null);\n  network.factory = useRef(null);\n  network.weth = useRef(null);\n  const backgroundListener = useRef(null);\n  async function setupConnection() {\n    try {\n      console.log(\"lets go!\");\n      network.provider = new ethers.providers.Web3Provider(window.ethereum);\n      network.signer = await network.provider.getSigner();\n      await getAccount().then(async (result) => {\n        network.account = result;\n      });\n\n      await getNetwork(network.provider).then(async (chainId) => {\n        // Set chainID\n        network.chainID = chainId;\n        if (chains.networks.includes(chainId)) {\n          // Get the router using the chainID\n          network.router = await getRouter(\n            chains.routerAddress.get(chainId),\n            network.signer\n          );\n          // Get default coins for network\n          network.coins = COINS.get(chainId);\n          // Get Weth address from router\n          await network.router.WETH().then((wethAddress) => {\n            network.weth = getWeth(wethAddress, network.signer);\n            // Set the value of the weth address in the default coins array\n            network.coins[0].address = wethAddress;\n          });\n          // Get the factory address from the router\n          await network.router.factory().then((factory_address) => {\n            network.factory = getFactory(factory_address, network.signer);\n          });\n          setConnected(true);\n        } else {\n          console.log(\"Wrong network.\");\n          setConnected(false);\n        }\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async function createListener() {\n    return setInterval(async () => {\n      // console.log(\"Heartbeat\");\n      try {\n        // Check the account has not changed\n        const account = await getAccount();\n        if (account != network.account) {\n          await setupConnection();\n        }\n        // const chainID = await getNetwork(network.provider);\n        // if (chainID !== network.chainID){\n        //   setConnected(false);\n        //   await setupConnection();\n        // }\n      } catch (e) {\n        setConnected(false);\n        await setupConnection();\n      }\n    }, 1000);\n  }\n\n  useEffect(async () => {\n    // Initial setup\n    console.log(\"Initial hook\");\n    await setupConnection();\n    console.log(\"network: \", network);\n\n    // Start background listener\n    if (backgroundListener.current != null) {\n      clearInterval(backgroundListener.current);\n    }\n    const listener = createListener();\n    backgroundListener.current = listener;\n    return () => clearInterval(backgroundListener.current);\n  }, [createListener, network, setupConnection]);\n  //}, []);\n\n  const renderNotConnected = () => {\n    console.log(\"Rendering\");\n    return (\n      <div className=\"App\">\n        <div>\n          <ConnectWalletPage />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {!isConnected && renderNotConnected()}\n      {isConnected && <div> {props.render(network)}</div>}\n    </>\n  );\n};\n\nexport default Web3Provider;\n","export const MenuItems = [\n  {\n    title: \"Swap\",\n    url: \"/dex/\",\n    cName: \"nav-links\",\n  },\n  {\n    title: \"Liquidity\",\n    url: \"/dex/liquidity\",\n    cName: \"nav-links\",\n  },\n];\n","export default __webpack_public_path__ + \"static/media/logo512.f7a75728.png\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MenuItems } from \"./MenuItems\";\nimport \"./NavBar.css\";\nimport companyLogo from \"./logo512.png\";\n\nclass NavBar extends Component {\n  state = { clicked: false };\n\n  render() {\n    return (\n      <nav>\n        <div className=\"Title\">\n          <img src={companyLogo} alt=\"Swapin.co DEX\"></img>\n\n          <h1 className=\"navbar-logo\"> </h1>\n        </div>\n\n        <div className=\"NavbarItems\">\n          <ul className={`nav-menu`}>\n            {MenuItems.map((item, index) => {\n              return (\n                <li key={index}>\n                  <Link className={\"nav-links\"} to={item.url}>\n                    {item.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Fab, Grid, InputBase, makeStyles } from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(1),\n    minHeight: \"80px\",\n    backgroundColor: COLORS.grey[50],\n    borderRadius: theme.spacing(2),\n    borderColor: COLORS.grey[300],\n    borderWidth: \"1px\",\n    borderStyle: \"solid\",\n  },\n  container_input: {\n    padding: theme.spacing(1),\n    minHeight: \"68px\",\n    backgroundColor: COLORS.grey[50],\n    borderRadius: theme.spacing(2),\n    borderColor: COLORS.grey[300],\n    borderWidth: \"1px\",\n    borderStyle: \"solid\",\n    marginLeft: \"50%\",\n    textAlign: \"right\",\n  },\n  container_blank: {\n    padding: theme.spacing(1),\n    minHeight: \"80px\",\n    borderRadius: theme.spacing(2),\n  },\n  grid: {\n    height: \"60px\",\n  },\n  fab: {\n    zIndex: \"0\",\n  },\n  input: {\n    ...theme.typography.h5,\n    width: \"100%\",\n  },\n  inputBase: {\n    textAlign: \"right\",\n  },\n}));\n\nTokenField.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  symbol: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  activeField: PropTypes.bool.isRequired,\n};\n\nexport function RemoveLiquidityField1(props) {\n  // This component is used to selecting a coin and entering a value, the props are explained below:\n  //      onClick - (string) => void - Called when the button is clicked\n  //      symbol - string - The text displayed on the button\n  //      value - string - The value of the text field\n  //      onChange - (e) => void - Called when the text field changes\n  //      activeField - boolean - Whether text can be entered into this field or not\n\n  const classes = useStyles();\n  const { onClick, symbol, value, onChange, activeField } = props;\n  return (\n    <div className={classes.container_blank}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {/* Button */}\n        <Grid item xs={3}>\n          <Fab\n            size=\"small\"\n            variant=\"extended\"\n            onClick={onClick}\n            className={classes.fab}\n          >\n            {symbol}\n            <ExpandMoreIcon />\n          </Fab>\n        </Grid>\n        {/* Text Field */}\n        <Grid item xs={9}>\n          <InputBase\n            value={value}\n            onChange={onChange}\n            placeholder=\"0.0\"\n            disabled={!activeField}\n            classes={{\n              root: classes.container_input,\n              input: classes.inputBase,\n            }}\n          />\n        </Grid>\n        {/* </div> */}\n      </Grid>\n    </div>\n  );\n}\n\nexport function RemoveLiquidityField2(props) {\n  // This component is used to selecting a coin and entering a value, the props are explained below:\n  //      onClick - (string) => void - Called when the button is clicked\n  //      symbol - string - The text displayed on the button\n  //      value - string - The value of the text field\n  //      onChange - (e) => void - Called when the text field changes\n  //      activeField - boolean - Whether text can be entered into this field or not\n\n  const classes = useStyles();\n  const { onClick, symbol } = props;\n\n  return (\n    <div className={classes.container_blank}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {/* Button */}\n        <Grid item xs={3}>\n          <Fab\n            size=\"small\"\n            variant=\"extended\"\n            onClick={onClick}\n            className={classes.fab}\n          >\n            {symbol}\n            <ExpandMoreIcon />\n          </Fab>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default function TokenField(props) {\n  // This component is used to selecting a token and entering a value, the props are explained below:\n  //      onClick - (string) => void - Called when the button is clicked\n  //      symbol - string - The text displayed on the button\n  //      value - string - The value of the text field\n  //      onChange - (e) => void - Called when the text field changes\n  //      activeField - boolean - Whether text can be entered into this field or not\n\n  const classes = useStyles();\n  const { onClick, symbol, value, onChange, activeField } = props;\n\n  return (\n    <div className={classes.container}>\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        className={classes.grid}\n      >\n        {/* Button */}\n        <Grid item xs={3}>\n          <Fab\n            size=\"small\"\n            variant=\"extended\"\n            onClick={onClick}\n            className={classes.fab}\n          >\n            {symbol}\n            <ExpandMoreIcon />\n          </Fab>\n        </Grid>\n\n        {/* Text Field */}\n        <Grid item xs={9}>\n          <InputBase\n            value={value}\n            onChange={onChange}\n            placeholder=\"0.0\"\n            disabled={!activeField}\n            classes={{ root: classes.input, input: classes.inputBase }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ButtonBase, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    width: \"100%\",\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    \"&:hover, &$focusVisible\": {\n      backgroundColor: COLORS.grey[200],\n    },\n  },\n  coinName: {\n    opacity: 0.6,\n  },\n}));\n\nTokenButton.propTypes = {\n  coinName: PropTypes.string.isRequired,\n  coinAbbr: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default function TokenButton(props) {\n  const { coinName, coinAbbr, onClick, ...other } = props;\n  const classes = useStyles();\n\n  return (\n    <ButtonBase focusRipple className={classes.button} onClick={onClick}>\n      <Grid container direction=\"column\">\n        <Typography variant=\"h6\">{coinAbbr}</Typography>\n        <Typography variant=\"body2\" className={classes.coinName}>\n          {coinName}\n        </Typography>\n      </Grid>\n    </ButtonBase>\n  );\n}\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  Grid,\n  IconButton,\n  makeStyles,\n  TextField,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TokenButton from \"./TokenButton\";\nimport { doesTokenExist } from \"../ethereumFunctions\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst styles = (theme) => ({\n  dialogContainer: {\n    borderRadius: theme.spacing(2),\n  },\n  titleSection: {\n    padding: theme.spacing(2),\n  },\n  titleText: {\n    alignSelf: \"center\",\n  },\n  hr: {\n    margin: 0,\n  },\n  address: {\n    paddingLeft: theme.spacing(2.5),\n    paddingRight: theme.spacing(2.5),\n    paddingBottom: theme.spacing(2),\n  },\n  coinList: {\n    height: \"300px\",\n    overflowY: \"scroll\",\n  },\n  coinContainer: {\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    paddingTop: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    overflow: \"hidden\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\n// This is a modified version of MaterialUI's DialogTitle component, I've added a close button in the top right corner\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle\n      disableTypography\n      className={classes.titleSection}\n      {...other}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignContent=\"center\"\n      >\n        <Typography variant=\"h6\" className={classes.titleText}>\n          {children}\n        </Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </Grid>\n    </MuiDialogTitle>\n  );\n});\n\n// This is a modified version of MaterialUI's DialogActions component, the color has been changed by modifying the CSS\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n    backgroundColor: COLORS.grey[100],\n  },\n}))(MuiDialogActions);\n\nTokenDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  coins: PropTypes.array.isRequired,\n};\n\nexport default function TokenDialog(props) {\n  // The TokenDialog component will display a dialog window on top of the page, allowing a user to select a coin\n  // from a list (list can be found in 'src/constants/coins.js') or enter an address into a search field. Any entered\n  // addresses will first be validated to make sure they exist.\n  // When the dialog closes, it will call the `onClose` prop with 1 argument which will either be undefined (if the\n  // user closes the dialog without selecting anything), or will be a string containing the address of a coin.\n\n  const classes = useStyles();\n  const { onClose, open, coins, signer, ...others } = props;\n\n  const [address, setAddress] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  // Called when the user tries to input a custom address, this function will validate the address and will either\n  // then close the dialog and return the validated address, or will display an error.\n  const submit = () => {\n    if (doesTokenExist(address, signer)) {\n      exit(address);\n    } else {\n      setError(\"This address is not valid\");\n    }\n  };\n\n  // Resets any fields in the dialog (in case it's opened in the future) and calls the `onClose` prop\n  const exit = (value) => {\n    setError(\"\");\n    setAddress(\"\");\n    onClose(value);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => exit(undefined)}\n      fullWidth\n      maxWidth=\"sm\"\n      classes={{ paper: classes.dialogContainer }}\n    >\n      <DialogTitle onClose={() => exit(undefined)}>Select Token</DialogTitle>\n\n      <hr className={classes.hr} />\n\n      <div className={classes.coinContainer}>\n        <Grid container direction=\"column\" spacing={1} alignContent=\"center\">\n          <TextField\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            variant=\"outlined\"\n            placeholder=\"Paste Address\"\n            error={error !== \"\"}\n            helperText={error}\n            fullWidth\n            className={classes.address}\n          />\n\n          <hr className={classes.hr} />\n\n          <Grid item className={classes.coinList}>\n            <Grid container direction=\"column\">\n              {/* Maps all of the tokens in the constants file to buttons */}\n              {coins.map((coin, index) => (\n                <Grid item key={index} xs={12}>\n                  <TokenButton\n                    coinName={coin.name}\n                    coinAbbr={coin.abbr}\n                    onClick={() => exit(coin.address)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n\n      <hr className={classes.hr} />\n\n      <DialogActions>\n        <Button autoFocus onClick={submit} color=\"primary\">\n          Enter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    margin: 0,\n    position: \"relative\",\n  },\n  progress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function LoadingButton(props) {\n  const classes = useStyles();\n  const { children, loading, valid, success, fail, onClick, ...other } = props;\n  return (\n    <div className={classes.wrapper}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        disabled={loading || !valid}\n        type=\"submit\"\n        onClick={onClick}\n        {...other}\n      >\n        {children}\n      </Button>\n      {loading && <CircularProgress size={24} className={classes.progress} />}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  Dialog,\n  Grid,\n  IconButton,\n  makeStyles,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = (theme) => ({\n  dialogContainer: {\n    borderRadius: theme.spacing(2),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nexport default function WrongNetwork(props) {\n  const classes = useStyles();\n  const { open } = props;\n  return (\n    <Dialog\n      open={open}\n      fullWidth\n      maxWidth=\"sm\"\n      classes={{ paper: classes.dialogContainer }}\n    >\n      <MuiDialogTitle>Unsupported Network</MuiDialogTitle>\n      Unsupported Network.\n    </Dialog>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  IconButton,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport SwapVerticalCircleIcon from \"@material-ui/icons/SwapVerticalCircle\";\nimport { useSnackbar } from \"notistack\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport {\n  getAccount,\n  getFactory,\n  getProvider,\n  getRouter,\n  getSigner,\n  getNetwork,\n  getAmountOut,\n  getBalanceAndSymbol,\n  getWeth,\n  swapTokens,\n  getReserves,\n} from \"../ethereumFunctions\";\nimport TokenField from \"./TokenField\";\nimport TokenDialog from \"./TokenDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\nimport COINS from \"../constants/coins\";\nimport * as chains from \"../constants/chains\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(1),\n    paddingBottom: theme.spacing(3),\n  },\n  switchButton: {\n    zIndex: 1,\n    margin: \"-16px\",\n    padding: theme.spacing(0.5),\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  footer: {\n    marginTop: \"45px\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction TokenSwapper(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n  // Stores data about their respective coin\n  const [coin1, setToken1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setToken2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n  const [field2Value, setField2Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    setToken1(coin2);\n    setToken2(coin1);\n    setField1Value(field2Value);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol)\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n    // If both coins have been selected, and a valid float has been entered which is less than the user's balance, then return true\n    const parsedInput1 = parseFloat(field1Value);\n    const parsedInput2 = parseFloat(field2Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      !isNaN(parsedInput1) &&\n      !isNaN(parsedInput2) &&\n      0 < parsedInput1 &&\n      parsedInput1 <= coin1.balance\n    );\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n      ).then((data) => {\n        setToken1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n      ).then((data) => {\n        setToken2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Calls the swapTokens Ethereum function to make the swap, then resets nessicary state variables\n  const swap = () => {\n    console.log(\"Attempting to swap tokens...\");\n    setLoading(true);\n\n    swapTokens(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      props.network.router,\n      props.network.account,\n      props.network.signer\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        enqueueSnackbar(\"Transaction Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Transaction Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000,\n        });\n      });\n  };\n\n  // The lambdas within these useEffects will be called when a particular dependency is updated. These dependencies\n  // are defined in the array of variables passed to the function after the lambda expression. If there are no dependencies\n  // the lambda will only ever be called when the component mounts. These are very useful for calculating new values\n  // after a particular state change, for example, calculating the new exchange rate whenever the addresses\n  // of the two coins change.\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get Reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address) {\n      getReserves(\n        coin1.address,\n        coin2.address,\n        props.network.factory,\n        props.network.signer,\n        props.network.account\n      ).then((data) => setReserves(data));\n    }\n  }, [\n    coin1.address,\n    coin2.address,\n    props.network.account,\n    props.network.factory,\n    props.network.router,\n    props.network.signer,\n  ]);\n\n  // This hook is called when either of the state variables `field1Value` `coin1.address` or `coin2.address` change.\n  // It attempts to calculate and set the state variable `field2Value`\n  // This means that if the user types a new value into the conversion box or the conversion rate changes,\n  // the value in the output box will change.\n  useEffect(() => {\n    if (isNaN(parseFloat(field1Value))) {\n      setField2Value(\"\");\n    } else if (parseFloat(field1Value) && coin1.address && coin2.address) {\n      getAmountOut(\n        coin1.address,\n        coin2.address,\n        field1Value,\n        props.network.router,\n        props.network.signer\n      )\n        .then((amount) => setField2Value(amount.toFixed(7)))\n        .catch((e) => {\n          console.log(e);\n          setField2Value(\"No route exist\");\n        });\n    } else {\n      setField2Value(\"\");\n    }\n  }, [\n    field1Value,\n    coin1.address,\n    coin2.address,\n    props.network.router,\n    props.network.signer,\n  ]);\n\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n  useEffect(() => {\n    const coinTimeout = setTimeout(() => {\n      console.log(\"props: \", props);\n      console.log(\"Checking balances...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => setReserves(data));\n      }\n\n      if (coin1.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n        ).then((data) => {\n          setToken1({\n            ...coin1,\n            balance: data.balance,\n          });\n        });\n      }\n      if (coin2.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n        ).then((data) => {\n          setToken2({\n            ...coin2,\n            balance: data.balance,\n          });\n        });\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Dialog Windows */}\n      <TokenDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        props={props.network.signer}\n      />\n      <TokenDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <WrongNetwork open={wrongNetworkOpen} />\n\n      {/* Token Swapper */}\n      <Container maxWidth=\"sm\">\n        <Paper className={classes.paperContainer}>\n          <Typography variant=\"h5\" className={classes.title}>\n            Swap Tokens\n          </Typography>\n\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n            <Grid item xs={12} className={classes.fullWidth}>\n              <TokenField\n                activeField={true}\n                value={field1Value}\n                onClick={() => setDialog1Open(true)}\n                onChange={handleChange.field1}\n                symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n              />\n            </Grid>\n\n            <IconButton onClick={switchFields} className={classes.switchButton}>\n              <SwapVerticalCircleIcon fontSize=\"medium\" />\n            </IconButton>\n\n            <Grid item xs={12} className={classes.fullWidth}>\n              <TokenField\n                activeField={false}\n                value={field2Value}\n                onClick={() => setDialog2Open(true)}\n                symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n              />\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Balance Display */}\n            <Typography variant=\"h6\">Your Balances</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(coin1.balance, coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(coin2.balance, coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Reserves Display */}\n            <Typography variant=\"h6\">Liquidity</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatReserve(reserves[0], coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatReserve(reserves[1], coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            <LoadingButton\n              loading={loading}\n              valid={isButtonEnabled()}\n              success={false}\n              fail={false}\n              onClick={swap}\n            >\n              <LoopIcon />\n              Swap\n            </LoadingButton>\n          </Grid>\n        </Paper>\n      </Container>\n\n      <Grid\n        container\n        className={classes.footer}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"flex-center\"\n      >\n        <p align=\"flex-center\">\n          <a href=\"https://altcoinchain.org/\">ALTCoinchain</a> -{\" \"}\n          <a href=\"http://www.partyexplorer.co/\">PartyChain</a> -{\" \"}\n          <a href=\"https://explorer.octa.space/\">OctaSpace</a> -{\" \"}\n          <a href=\"https://dogechain.dog/\">DOGEchain</a> -{\" \"}\n          <a href=\"https://explorer.ethoprotocol.com/\">ETHO</a> -{\" \"}\n          <a href=\"https://egem.io/\">EGEM</a> -{\" \"}\n          <a href=\"https://etherscan.io/\">ETH</a> -{\" \"}\n          <a href=\"https://polygonscan.com/\">POLYGON</a> -{\" \"}\n          <a href=\"https://bscscan.com/\">BSC</a> -{\" \"}\n          <a href=\"https://ftmscan.com/\">FTM</a> <br></br>\n          <br></br>\n          <a href=\"https://forms.gle/qFdcJTx13Qt13LHJA\">\n            add chain or tokens\n          </a>{\" \"}\n          - <a href=\"https://twitter.com/swapinco\">Twitter</a> -{\" \"}\n          <a href=\"https://discord.gg/qejCwu2qrp\">Discord</a> - -{\" \"}\n          <a href=\"https://github.com/swapinco\">Docs</a>\n        </p>\n      </Grid>\n    </div>\n  );\n}\n\nexport default TokenSwapper;\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"@material-ui/core\";\n\nexport default function SwitchButton(props) {\n  const { setDeploy } = props;\n\n  const changeStyles = (K) => {\n    if (K === true) {\n      let add_button = document.getElementById(\"add-button\");\n      add_button.style.backgroundColor = \"#ff0000\";\n\n      let remove_button = document.getElementById(\"remove-button\");\n      remove_button.style.backgroundColor = \"#9e9e9e\";\n    } else {\n      let remove_button = document.getElementById(\"remove-button\");\n      remove_button.style.backgroundColor = \"#ff0000\";\n\n      let add_button = document.getElementById(\"add-button\");\n      add_button.style.backgroundColor = \"#9e9e9e\";\n    }\n  };\n\n  return (\n    <div>\n      <ButtonGroup size=\"large\" variant=\"contained\">\n        <Button\n          id=\"add-button\"\n          color=\"primary\"\n          text=\"white\"\n          onClick={() => {\n            setDeploy(true);\n            changeStyles(true);\n          }}\n        >\n          Deploy Liquidity\n        </Button>\n\n        <Button\n          id=\"remove-button\"\n          color=\"secondary\"\n          text=\"white\"\n          onClick={() => {\n            setDeploy(false);\n            changeStyles(false);\n          }}\n        >\n          Remove Liquidity\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","import { Contract, ethers } from \"ethers\";\nimport { fetchReserves, getDecimals } from \"../ethereumFunctions\";\n\nconst ERC20 = require(\"../build/ERC20.json\");\nconst PAIR = require(\"../build/IUniswapV2Pair.json\");\n\n// Function used to add Liquidity to any pair of tokens or token-ALT\n// To work correctly, there needs to be 9 arguments:\n//    `address1` - An Ethereum address of the coin to add from (either a token or ALT)\n//    `address2` - An Ethereum address of the coin to add to (either a token or ALT)\n//    `amount1` - A float or similar number representing the value of address1's coin to add\n//    `amount2` - A float or similar number representing the value of address2's coin to add\n//    `amount1Min` - A float or similar number representing the minimum of address1's coin to add\n//    `amount2Min` - A float or similar number representing the minimum of address2's coin to add\n//    `routerContract` - The router contract to carry out this trade\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `provider` - The current provider\n//    `signer` - The current signer\nexport async function addLiquidity(\n  address1,\n  address2,\n  amount1,\n  amount2,\n  amount1min,\n  amount2min,\n  routerContract,\n  account,\n  signer\n) {\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const token2 = new Contract(address2, ERC20.abi, signer);\n\n  const token1Decimals = await getDecimals(token1);\n  const token2Decimals = await getDecimals(token2);\n\n  const amountIn1 = ethers.utils.parseUnits(amount1, token1Decimals);\n  const amountIn2 = ethers.utils.parseUnits(amount2, token2Decimals);\n\n  const amount1Min = ethers.utils.parseUnits(amount1min, token1Decimals);\n  const amount2Min = ethers.utils.parseUnits(amount2min, token2Decimals);\n\n  const time = Math.floor(Date.now() / 1000) + 200000;\n  const deadline = ethers.BigNumber.from(time);\n\n  await token1.approve(routerContract.address, amountIn1);\n  await token2.approve(routerContract.address, amountIn2);\n\n  const wethAddress = await routerContract.WETH();\n\n  console.log([\n    address1,\n    address2,\n    amountIn1,\n    amountIn2,\n    amount1Min,\n    amount2Min,\n    account,\n    deadline,\n  ]);\n\n  if (address1 === wethAddress) {\n    // Eth + Token\n    await routerContract.addLiquidityETH(\n      address2,\n      amountIn2,\n      amount2Min,\n      amount1Min,\n      account,\n      deadline,\n      { value: amountIn1 }\n    );\n  } else if (address2 === wethAddress) {\n    // Token + Eth\n    await routerContract.addLiquidityETH(\n      address1,\n      amountIn1,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline,\n      { value: amountIn2 }\n    );\n  } else {\n    // Token + Token\n    await routerContract.addLiquidity(\n      address1,\n      address2,\n      amountIn1,\n      amountIn2,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline\n    );\n  }\n}\n\n// Function used to remove Liquidity from any pair of tokens or token-ALT\n// To work correctly, there needs to be 9 arguments:\n//    `address1` - An Ethereum address of the coin to recieve (either a token or ALT)\n//    `address2` - An Ethereum address of the coin to recieve (either a token or ALT)\n//    `liquidity_tokens` - A float or similar number representing the value of liquidity tokens you will burn to get tokens back\n//    `amount1Min` - A float or similar number representing the minimum of address1's coin to recieve\n//    `amount2Min` - A float or similar number representing the minimum of address2's coin to recieve\n//    `routerContract` - The router contract to carry out this trade\n//    `accountAddress` - An Ethereum address of the current user's account\n//    `provider` - The current provider\n//    `signer` - The current signer\nexport async function removeLiquidity(\n  address1,\n  address2,\n  liquidity_tokens,\n  amount1min,\n  amount2min,\n  routerContract,\n  account,\n  signer,\n  factory\n) {\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const token2 = new Contract(address2, ERC20.abi, signer);\n\n  const token1Decimals = await getDecimals(token1);\n  const token2Decimals = await getDecimals(token2);\n\n  const Getliquidity = (liquidity_tokens) => {\n    if (liquidity_tokens < 0.001) {\n      return ethers.BigNumber.from(liquidity_tokens * 10 ** 18);\n    }\n    return ethers.utils.parseUnits(String(liquidity_tokens), 18);\n  };\n\n  const liquidity = Getliquidity(liquidity_tokens);\n  console.log(\"liquidity: \", liquidity);\n\n  const amount1Min = ethers.utils.parseUnits(\n    String(amount1min),\n    token1Decimals\n  );\n  const amount2Min = ethers.utils.parseUnits(\n    String(amount2min),\n    token2Decimals\n  );\n\n  const time = Math.floor(Date.now() / 1000) + 200000;\n  const deadline = ethers.BigNumber.from(time);\n\n  const wethAddress = await routerContract.WETH();\n  const pairAddress = await factory.getPair(address1, address2);\n  const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n  await pair.approve(routerContract.address, liquidity);\n\n  console.log([\n    address1,\n    address2,\n    Number(liquidity),\n    Number(amount1Min),\n    Number(amount2Min),\n    account,\n    deadline,\n  ]);\n\n  if (address1 === wethAddress) {\n    // Eth + Token\n    await routerContract.removeLiquidityETH(\n      address2,\n      liquidity,\n      amount2Min,\n      amount1Min,\n      account,\n      deadline\n    );\n  } else if (address2 === wethAddress) {\n    // Token + Eth\n    await routerContract.removeLiquidityETH(\n      address1,\n      liquidity,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline\n    );\n  } else {\n    // Token + Token\n    await routerContract.removeLiquidity(\n      address1,\n      address2,\n      liquidity,\n      amount1Min,\n      amount2Min,\n      account,\n      deadline\n    );\n  }\n}\n\nconst quote = (amount1, reserve1, reserve2) => {\n  const amount2 = amount1 * (reserve2 / reserve1);\n  return [amount2];\n};\n\n// Function used to get a quote of the liquidity addition\n//    `address1` - An Ethereum address of the coin to recieve (either a token or ALT)\n//    `address2` - An Ethereum address of the coin to recieve (either a token or ALT)\n//    `amountA_desired` - The prefered value of the first token that the user would like to deploy as liquidity\n//    `amountB_desired` - The prefered value of the second token that the user would like to deploy as liquidity\n//    `factory` - The current factory\n//    `signer` - The current signer\n\nasync function quoteMintLiquidity(\n  address1,\n  address2,\n  amountA,\n  amountB,\n  factory,\n  signer\n) {\n  const MINIMUM_LIQUIDITY = 1000;\n  let _reserveA = 0;\n  let _reserveB = 0;\n  let totalSupply = 0;\n  [_reserveA, _reserveB, totalSupply] = await factory\n    .getPair(address1, address2)\n    .then(async (pairAddress) => {\n      if (pairAddress !== \"0x0000000000000000000000000000000000000000\") {\n        const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n        const reservesRaw = await fetchReserves(\n          address1,\n          address2,\n          pair,\n          signer\n        ); // Returns the reserves already formated as ethers\n        const reserveA = reservesRaw[0];\n        const reserveB = reservesRaw[1];\n\n        const _totalSupply = await pair.totalSupply();\n        const totalSupply = Number(ethers.utils.formatEther(_totalSupply));\n        return [reserveA, reserveB, totalSupply];\n      } else {\n        return [0, 0, 0];\n      }\n    });\n\n  const token1 = new Contract(address1, ERC20.abi, signer);\n  const token2 = new Contract(address2, ERC20.abi, signer);\n\n  // Need to do all this decimals work to account for 0 decimal numbers\n\n  const token1Decimals = await getDecimals(token1);\n  const token2Decimals = await getDecimals(token2);\n\n  const valueA = amountA * 10 ** token1Decimals;\n  const valueB = amountB * 10 ** token2Decimals;\n\n  const reserveA = _reserveA * 10 ** token1Decimals;\n  const reserveB = _reserveB * 10 ** token2Decimals;\n\n  if (totalSupply == 0) {\n    return Math.sqrt(valueA * valueB - MINIMUM_LIQUIDITY) * 10 ** -18;\n  }\n\n  return Math.min(\n    (valueA * totalSupply) / reserveA,\n    (valueB * totalSupply) / reserveB\n  );\n}\n\nexport async function quoteAddLiquidity(\n  address1,\n  address2,\n  amountADesired,\n  amountBDesired,\n  factory,\n  signer\n) {\n  const pairAddress = await factory.getPair(address1, address2);\n  const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n  const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\n  const reserveA = reservesRaw[0];\n  const reserveB = reservesRaw[1];\n\n  if (reserveA === 0 && reserveB === 0) {\n    const amountOut = await quoteMintLiquidity(\n      address1,\n      address2,\n      amountADesired,\n      amountBDesired,\n      factory,\n      signer\n    );\n    return [amountADesired, amountBDesired, amountOut.toPrecision(8)];\n  } else {\n    const amountBOptimal = quote(amountADesired, reserveA, reserveB);\n    if (amountBOptimal <= amountBDesired) {\n      const amountOut = await quoteMintLiquidity(\n        address1,\n        address2,\n        amountADesired,\n        amountBOptimal,\n        factory,\n        signer\n      );\n      return [amountADesired, amountBOptimal, amountOut.toPrecision(8)];\n    } else {\n      const amountAOptimal = quote(amountBDesired, reserveB, reserveA);\n      const amountOut = await quoteMintLiquidity(\n        address1,\n        address2,\n        amountAOptimal,\n        amountBDesired,\n        factory,\n        signer\n      );\n      return [amountAOptimal, amountBDesired, amountOut.toPrecision(8)];\n    }\n  }\n}\n\n// Function used to get a quote of the liquidity removal\n//    `address1` - An Ethereum address of the coin to recieve (either a token or ALT)\n//    `address2` - An Ethereum address of the coin to recieve (either a token or ALT)\n//    `liquidity` - The amount of liquidity tokens the user will burn to get their tokens back\n//    `factory` - The current factory\n//    `signer` - The current signer\n\nexport async function quoteRemoveLiquidity(\n  address1,\n  address2,\n  liquidity,\n  factory,\n  signer\n) {\n  const pairAddress = await factory.getPair(address1, address2);\n  console.log(\"pair address\", pairAddress);\n  const pair = new Contract(pairAddress, PAIR.abi, signer);\n\n  const reservesRaw = await fetchReserves(address1, address2, pair, signer); // Returns the reserves already formated as ethers\n  const reserveA = reservesRaw[0];\n  const reserveB = reservesRaw[1];\n\n  const feeOn =\n    (await factory.feeTo()) !== 0x0000000000000000000000000000000000000000;\n\n  const _kLast = await pair.kLast();\n  const kLast = Number(ethers.utils.formatEther(_kLast));\n\n  const _totalSupply = await pair.totalSupply();\n  let totalSupply = Number(ethers.utils.formatEther(_totalSupply));\n\n  if (feeOn && kLast > 0) {\n    const feeLiquidity =\n      (totalSupply * (Math.sqrt(reserveA * reserveB) - Math.sqrt(kLast))) /\n      (5 * Math.sqrt(reserveA * reserveB) + Math.sqrt(kLast));\n    totalSupply = totalSupply + feeLiquidity;\n  }\n\n  const Aout = (reserveA * liquidity) / totalSupply;\n  const Bout = (reserveB * liquidity) / totalSupply;\n\n  return [liquidity, Aout, Bout];\n}\n","import React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport { useSnackbar } from \"notistack\";\nimport { getBalanceAndSymbol, getReserves } from \"../ethereumFunctions\";\n\nimport { addLiquidity, quoteAddLiquidity } from \"./LiquidityFunctions\";\n\nimport TokenField from \"../TokenSwapper/TokenField\";\nimport TokenDialog from \"../TokenSwapper/TokenDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\n    color: \"white\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  values: {\n    width: \"50%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityDeployer(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n  // Stores data about their respective coin\n  const [coin1, setToken1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setToken2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n  const [field2Value, setField2Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Stores the user's balance of liquidity tokens for the current pair\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\n\n  // Used when getting a quote of liquidity\n  const [liquidityOut, setLiquidityOut] = React.useState([0, 0, 0]);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    let oldField1Value = field1Value;\n    let oldField2Value = field2Value;\n\n    setToken1(coin2);\n    setToken2(coin1);\n    setField1Value(oldField2Value);\n    setField2Value(oldField1Value);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n    field2: (e) => {\n      setField2Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol)\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput1 = parseFloat(field1Value);\n    const parsedInput2 = parseFloat(field2Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      parsedInput1 !== NaN &&\n      0 < parsedInput1 &&\n      parsedInput2 !== NaN &&\n      0 < parsedInput2 &&\n      parsedInput1 <= coin1.balance &&\n      parsedInput2 <= coin2.balance\n    );\n  };\n\n  const deploy = () => {\n    console.log(\"Attempting to deploy liquidity...\");\n    setLoading(true);\n\n    addLiquidity(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      field2Value,\n      \"0\",\n      \"0\",\n      props.network.router,\n      props.network.account,\n      props.network.signer\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        setField2Value(\"\");\n        enqueueSnackbar(\"Deployment Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000,\n        });\n      });\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n      ).then((data) => {\n        setToken1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n      ).then((data) => {\n        setToken2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(\n        coin1.address,\n        coin2.address,\n        props.network.factory,\n        props.network.signer,\n        props.network.account\n      ).then((data) => {\n        setReserves([data[0], data[1]]);\n        setLiquidityTokens(data[2]);\n      });\n    }\n  }, [\n    coin1.address,\n    coin2.address,\n    props.network.account,\n    props.network.factory,\n    props.network.signer,\n  ]);\n\n  // This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity deployment.\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity deployment\");\n\n      quoteAddLiquidity(\n        coin1.address,\n        coin2.address,\n        field1Value,\n        field2Value,\n        props.network.factory,\n        props.network.signer\n      ).then((data) => {\n        // console.log(data);\n        console.log(\"TokenA in: \", data[0]);\n        console.log(\"TokenB in: \", data[1]);\n        console.log(\"Liquidity out: \", data[2]);\n        setLiquidityOut([data[0], data[1], data[2]]);\n      });\n    }\n  }, [\n    isButtonEnabled,\n    coin1.address,\n    coin2.address,\n    field1Value,\n    field2Value,\n    props.network.factory,\n    props.network.signer,\n  ]);\n\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n  useEffect(() => {\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n        ).then((data) => {\n          setToken1({\n            ...coin1,\n            balance: data.balance,\n          });\n        });\n      }\n      if (coin2.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n        ).then((data) => {\n          setToken2({\n            ...coin2,\n            balance: data.balance,\n          });\n        });\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Liquidity deployer */}\n      <Typography variant=\"h5\" className={classes.title}></Typography>\n\n      {/* Dialog Windows */}\n      <TokenDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <TokenDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.networksigner}\n      />\n      <WrongNetwork open={wrongNetworkOpen} />\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={12} className={classes.fullWidth}>\n          <TokenField\n            activeField={true}\n            value={field1Value}\n            onClick={() => setDialog1Open(true)}\n            onChange={handleChange.field1}\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.fullWidth}>\n          <TokenField\n            activeField={true}\n            value={field2Value}\n            onClick={() => setDialog2Open(true)}\n            onChange={handleChange.field2}\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={4}\n        className={classes.balance}\n      >\n        <hr className={classes.hr} />\n        <Grid\n          container\n          item\n          className={classes.values}\n          direction=\"column\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {/* Balance Display */}\n          <Typography variant=\"h6\">Your Balances</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin1.balance, coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin2.balance, coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Reserves Display */}\n          <Typography variant=\"h6\">Reserves</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[0], coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[1], coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Liquidity Tokens Display */}\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\n          <Grid container direction=\"row\" justifyContent=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(liquidityTokens, \"SWAPIN-V2\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Paper className={classes.paperContainer}>\n          {/*Red  Display to show the quote */}\n          <Grid\n            container\n            item\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={2}\n            className={classes.fullWidth}\n          >\n            {/* Tokens in */}\n            <Typography variant=\"h6\">Tokens in</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(liquidityOut[0], coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(liquidityOut[1], coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Liquidity Tokens Display */}\n            <Typography variant=\"h6\">Liquidity Pool Tokens Out</Typography>\n            <Grid container direction=\"row\" justifyContent=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatReserve(liquidityOut[2], \"SWAPIN-V2\")}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <hr className={classes.hr} />\n      </Grid>\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <LoadingButton\n          loading={loading}\n          valid={isButtonEnabled()}\n          success={false}\n          fail={false}\n          onClick={deploy}\n        >\n          <AccountBalanceIcon className={classes.buttonIcon} />\n          Deploy\n        </LoadingButton>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LiquidityDeployer;\n","import React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { useSnackbar } from \"notistack\";\nimport { getBalanceAndSymbol, getReserves } from \"../ethereumFunctions\";\nimport { removeLiquidity, quoteRemoveLiquidity } from \"./LiquidityFunctions\";\nimport {\n  RemoveLiquidityField1,\n  RemoveLiquidityField2,\n} from \"../TokenSwapper/TokenField\";\nimport TokenDialog from \"../TokenSwapper/TokenDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\n    color: \"white\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  values: {\n    width: \"50%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityRemover(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n  // Stores data about their respective coin\n  const [coin1, setToken1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setToken2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Stores the liquidity tokens balance of the user\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\n\n  // Stores the input and output for the liquidity removal preview\n  const [tokensOut, setTokensOut] = React.useState([0, 0, 0]);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    setToken1(coin2);\n    setToken2(coin1);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol)\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput = parseFloat(field1Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      parsedInput !== NaN &&\n      0 < parsedInput &&\n      parsedInput <= liquidityTokens\n    );\n  };\n\n  const remove = () => {\n    console.log(\"Attempting to remove liquidity...\");\n    setLoading(true);\n\n    removeLiquidity(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      0,\n      0,\n      props.network.router,\n      props.network.account,\n      props.network.signer,\n      props.network.factory\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        enqueueSnackbar(\"Removal Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000,\n        });\n      });\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n      ).then((data) => {\n        setToken1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n      ).then((data) => {\n        setToken2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(\n        coin1.address,\n        coin2.address,\n        props.network.factory,\n        props.network.signer,\n        props.network.account\n      ).then((data) => {\n        setReserves([data[0], data[1]]);\n        setLiquidityTokens(data[2]);\n      });\n    }\n  }, [\n    coin1.address,\n    coin2.address,\n    props.network.account,\n    props.network.factory,\n    props.network.signer,\n  ]);\n\n  // This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity removal.\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity removal\");\n      quoteRemoveLiquidity(\n        coin1.address,\n        coin2.address,\n        field1Value,\n        props.network.factory,\n        props.network.signer\n      ).then((data) => {\n        setTokensOut(data);\n      });\n    }\n  }, [\n    isButtonEnabled,\n    coin1.address,\n    coin2.address,\n    field1Value,\n    props.network.factory,\n    props.network.signer,\n  ]);\n\n  useEffect(() => {\n    // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n    // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n        ).then((data) => {\n          setToken1({\n            ...coin1,\n            balance: data.balance,\n          });\n        });\n      }\n      if (coin2.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n        ).then((data) => {\n          setToken2({\n            ...coin2,\n            balance: data.balance,\n          });\n        });\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Token Swapper */}\n      <Typography variant=\"h5\" className={classes.title}></Typography>\n\n      {/* Dialog Windows */}\n      <TokenDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <TokenDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <WrongNetwork open={wrongNetworkOpen} />\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={12} className={classes.fullWidth}>\n          <RemoveLiquidityField1\n            activeField={true}\n            value={field1Value}\n            onClick={() => setDialog1Open(true)}\n            onChange={handleChange.field1}\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.fullWidth}>\n          <RemoveLiquidityField2\n            activeField={true}\n            onClick={() => setDialog2Open(true)}\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={4}\n        className={classes.balance}\n      >\n        <hr className={classes.hr} />\n        <Grid\n          container\n          item\n          className={classes.values}\n          direction=\"column\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {/* Balance Display */}\n          <Typography variant=\"h6\">Your Balances</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin1.balance, coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin2.balance, coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Reserves Display */}\n          <Typography variant=\"h6\">Reserves</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[0], coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[1], coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Liquidity Tokens Display */}\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\n          <Grid container direction=\"row\" justifyContent=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(liquidityTokens, \"SWAPIN-V2\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Paper className={classes.paperContainer}>\n          {/*Red  Display to show the quote */}\n          <Grid\n            container\n            item\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={2}\n            className={classes.fullWidth}\n          >\n            {/* Tokens in */}\n            <Typography variant=\"h6\">Liquidity Pool Tokens in</Typography>\n            <Grid container direction=\"row\" justifyContent=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[0], \"SWAPIN-V2\")}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Liquidity Tokens Display */}\n            <Typography variant=\"h6\">Tokens Out</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[1], coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[2], coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n        <hr className={classes.hr} />\n      </Grid>\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <LoadingButton\n          loading={loading}\n          valid={isButtonEnabled()}\n          success={false}\n          fail={false}\n          onClick={remove}\n        >\n          <ArrowDownwardIcon className={classes.buttonIcon} />\n          Remove\n        </LoadingButton>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LiquidityRemover;\n","import React from \"react\";\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\n\nimport SwitchButton from \"./SwitchButton\";\nimport LiquidityDeployer from \"./LiquidityDeployer\";\nimport LiquidityRemover from \"./RemoveLiquidity\";\nimport { CenterFocusStrong } from \"@material-ui/icons\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(1),\n    paddingBottom: theme.spacing(3),\n    maxWidth: 700,\n    margin: \"auto\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  footer: {\n    marginTop: \"45px\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction Liquidity(props) {\n  const classes = useStyles();\n\n  const [deploy, setDeploy] = React.useState(true);\n\n  const deploy_or_remove = (deploy) => {\n    if (deploy === true) {\n      return <LiquidityDeployer network={props.network} />;\n    }\n    return <LiquidityRemover network={props.network} />;\n  };\n\n  return (\n    <div>\n      <Container>\n        <Paper className={classes.paperContainer}>\n          <Typography variant=\"h5\" className={classes.title}>\n            <SwitchButton setDeploy={setDeploy} />\n          </Typography>\n\n          {deploy_or_remove(deploy)}\n        </Paper>\n      </Container>\n\n      <Grid\n        container\n        className={classes.footer}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"flex-center\"\n      >\n        <p align=\"flex-center\">\n          <a href=\"https://altcoinchain.org/\">ALTCoinchain</a> -{\" \"}\n          <a href=\"http://www.partyexplorer.co/\">PartyChain</a> -{\" \"}\n          <a href=\"https://explorer.octa.space/\">OctaSpace</a> -{\" \"}\n          <a href=\"https://dogechain.dog/\">DOGEchain</a> -{\" \"}\n          <a href=\"https://explorer.ethoprotocol.com/\">ETHO</a> -{\" \"}\n          <a href=\"https://egem.io/\">EGEM</a> -{\" \"}\n          <a href=\"https://etherscan.io/\">ETH</a> -{\" \"}\n          <a href=\"https://polygonscan.com/\">POLYGON</a> -{\" \"}\n          <a href=\"https://bscscan.com/\">BSC</a> -{\" \"}\n          <a href=\"https://ftmscan.com/\">FTM</a> <br></br>\n          <br></br>\n          <a href=\"https://forms.gle/qFdcJTx13Qt13LHJA\">\n            add chain or tokens\n          </a>{\" \"}\n          - <a href=\"https://twitter.com/swapinco\">Twitter</a> -{\" \"}\n          <a href=\"https://discord.gg/qejCwu2qrp\">Discord</a> -{\" \"}\n          <a href=\"https://github.com/swapinco\">Docs</a>\n        </p>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Liquidity;\n","import React from \"react\";\nimport \"./App.css\";\nimport { ethers } from \"ethers\";\nimport Web3Provider from \"./network\";\nimport NarBar from \"./NavBar/NavBar\";\nimport TokenSwapper from \"./TokenSwapper/TokenSwapper\";\nimport { Route } from \"react-router-dom\";\nimport { SnackbarProvider } from \"notistack\";\nimport Liquidity from \"./Liquidity/Liquidity\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff0000\",\n      contrastText: \"#ffffff\",\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#ffffff\",\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <SnackbarProvider maxSnack={3}>\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            render={(network) => (\n              <div>\n                <NarBar />\n                <Route exact path=\"/dex/\">\n                  <TokenSwapper network={network} />\n                </Route>\n\n                <Route exact path=\"/dex/liquidity\">\n                  <Liquidity network={network} />\n                </Route>\n              </div>\n            )}\n          ></Web3Provider>\n        </ThemeProvider>\n      </SnackbarProvider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}